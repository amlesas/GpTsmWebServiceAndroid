package org.mbds.wolf.tsm.gp.systems.messaging2_1_0.elements;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.3.5
//
// Created by amlesas Development at 08-07-2014
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.ExtendedSoapSerializationEnvelope;

public class PhysicalCardIdentifier extends AttributeContainer implements KvmSerializable
{
    
    public String CardLifeCycleState;
    
    public ArrayList< AID>AID =new ArrayList<AID>();
    
    public String IdentifierType;
    
    public String IdentifierValue;

    public PhysicalCardIdentifier ()
    {
    }

    public PhysicalCardIdentifier (AttributeContainer inObj,ExtendedSoapSerializationEnvelope envelope)
    {
	    
	    if (inObj == null)
            return;



        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("CardLifeCycleState"))
        {	
	        java.lang.Object obj = soapObject.getProperty("CardLifeCycleState");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.CardLifeCycleState = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.CardLifeCycleState = (String)obj;
            }    
        }
        if (soapObject.hasProperty("AID"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.AID = new ArrayList<AID>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("AID"))
	            {
                    java.lang.Object j =info.getValue();
	                AID j1= (AID)envelope.get(j,AID.class);
	                this.AID.add(j1);
	            }
	        }
        }


        if (inObj.hasAttribute("IdentifierType"))
        {	
            java.lang.Object j = inObj.getAttribute("IdentifierType");
            if (j != null)
            {
	            IdentifierType = j.toString();
            }
        }

        if (inObj.hasAttribute("IdentifierValue"))
        {	
            java.lang.Object j = inObj.getAttribute("IdentifierValue");
            if (j != null)
            {
	            IdentifierValue = j.toString();
            }
        }

    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return CardLifeCycleState;
        }
        if(propertyIndex>=+1 && propertyIndex< + 1+this.AID.size())
        {
            return AID.get(propertyIndex-(+1));
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 1+AID.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "CardLifeCycleState";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex>=+1 && propertyIndex <= +1+this.AID.size())
        {
            info.type = AID.class;
            info.name = "AID";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 2;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "IdentifierType";
            info.namespace= "";
            info.setValue(IdentifierType);
        }
        if(index==1)
        {
            info.name = "IdentifierValue";
            info.namespace= "";
            info.setValue(IdentifierValue);
        }
    }}
