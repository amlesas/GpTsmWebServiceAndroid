package org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.services.types.requests;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.3.5
//
// Created by amlesas Development at 08-07-2014
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigInteger;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.ExtendedSoapSerializationEnvelope;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.services.types.Enums;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.services.types.ServiceInstanceReferenceType;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.services.types.Enums.ActionOnServiceExecutionStatusType;

public class HandleActionDoneOnServiceNotificationRequestType extends BasicRequestType implements KvmSerializable
{
    
    public ServiceInstanceReferenceType ServiceInstanceReference;
    
    public ArrayList< BigInteger>Action =new ArrayList<BigInteger>();
    
    public ArrayList< Enums.ActionOnServiceExecutionStatusType>ActionExecutionStatus =new ArrayList<Enums.ActionOnServiceExecutionStatusType>();
    
    public BigInteger NewServiceInstanceState=BigInteger.ZERO;

    public HandleActionDoneOnServiceNotificationRequestType ()
    {
    }

    public HandleActionDoneOnServiceNotificationRequestType (AttributeContainer inObj,ExtendedSoapSerializationEnvelope envelope)
    {
	    super(inObj, envelope);
	    if (inObj == null)
            return;



        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("ServiceInstanceReference"))
        {	
	        java.lang.Object j = soapObject.getProperty("ServiceInstanceReference");
	        this.ServiceInstanceReference = (ServiceInstanceReferenceType)envelope.get(j,ServiceInstanceReferenceType.class);
        }
        if (soapObject.hasProperty("Action"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.Action = new ArrayList<BigInteger>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("Action"))
	            {
                    java.lang.Object j =info.getValue();
	                BigInteger j1= new BigInteger(j.toString());
	                this.Action.add(j1);
	            }
	        }
        }
        if (soapObject.hasProperty("ActionExecutionStatus"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.ActionExecutionStatus = new ArrayList<Enums.ActionOnServiceExecutionStatusType>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("ActionExecutionStatus"))
	            {
                    java.lang.Object j =info.getValue();
	                Enums.ActionOnServiceExecutionStatusType j1= Enums.ActionOnServiceExecutionStatusType.fromString(j.toString());
	                this.ActionExecutionStatus.add(j1);
	            }
	        }
        }
        if (soapObject.hasProperty("NewServiceInstanceState"))
        {	
	        java.lang.Object obj = soapObject.getProperty("NewServiceInstanceState");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.NewServiceInstanceState = new BigInteger(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof BigInteger){
                this.NewServiceInstanceState = (BigInteger)obj;
            }    
        }


    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return ServiceInstanceReference;
        }
        if(propertyIndex==count+1)
        {
            return NewServiceInstanceState!=null?NewServiceInstanceState.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+2 && propertyIndex< count+ 2+this.Action.size())
        {
            return Action.get(propertyIndex-(count+2));
        }
        if(propertyIndex>=count+2+this.Action.size() && propertyIndex< count+ 2+this.Action.size()+this.ActionExecutionStatus.size())
        {
            return ActionExecutionStatus.get(propertyIndex-(count+2+this.Action.size()));
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+2+Action.size()+ActionExecutionStatus.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = ServiceInstanceReferenceType.class;
            info.name = "ServiceInstanceReference";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "NewServiceInstanceState";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex>=count+2 && propertyIndex <= count+2+this.Action.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Action";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex>=count+2+this.Action.size() && propertyIndex <= count+2+this.Action.size()+this.ActionExecutionStatus.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ActionExecutionStatus";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

}
