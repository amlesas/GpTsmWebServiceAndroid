package org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.services.types;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.3.5
//
// Created by amlesas Development at 08-07-2014
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.ExtendedSoapSerializationEnvelope;

public class KeyInfoType extends AttributeContainer implements KvmSerializable
{
    
    public String KeyName;
    
    public KeyValueType KeyValue;
    
    public RetrievalMethodType RetrievalMethod;
    
    public X509DataType X509Data;
    
    public PGPDataType PGPData;
    
    public SPKIDataType SPKIData;
    
    public String MgmtData;
    
    public String Id;

    public KeyInfoType ()
    {
    }

    public KeyInfoType (AttributeContainer inObj,ExtendedSoapSerializationEnvelope envelope)
    {
	    
	    if (inObj == null)
            return;



        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("KeyName"))
        {	
	        java.lang.Object obj = soapObject.getProperty("KeyName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.KeyName = j.toString();
                }
	        }
	        else if (obj!= null){
                this.KeyName = obj.toString();
            }    
        }
        if (soapObject.hasProperty("KeyValue"))
        {	
	        java.lang.Object j = soapObject.getProperty("KeyValue");
	        this.KeyValue = (KeyValueType)envelope.get(j,KeyValueType.class);
        }
        if (soapObject.hasProperty("RetrievalMethod"))
        {	
	        java.lang.Object j = soapObject.getProperty("RetrievalMethod");
	        this.RetrievalMethod = (RetrievalMethodType)envelope.get(j,RetrievalMethodType.class);
        }
        if (soapObject.hasProperty("X509Data"))
        {	
	        java.lang.Object j = soapObject.getProperty("X509Data");
	        this.X509Data = (X509DataType)envelope.get(j,X509DataType.class);
        }
        if (soapObject.hasProperty("PGPData"))
        {	
	        java.lang.Object j = soapObject.getProperty("PGPData");
	        this.PGPData = (PGPDataType)envelope.get(j,PGPDataType.class);
        }
        if (soapObject.hasProperty("SPKIData"))
        {	
	        java.lang.Object j = soapObject.getProperty("SPKIData");
	        this.SPKIData = (SPKIDataType)envelope.get(j,SPKIDataType.class);
        }
        if (soapObject.hasProperty("MgmtData"))
        {	
	        java.lang.Object obj = soapObject.getProperty("MgmtData");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.MgmtData = j.toString();
                }
	        }
	        else if (obj!= null){
                this.MgmtData = obj.toString();
            }    
        }


        if (inObj.hasAttribute("Id"))
        {	
            java.lang.Object j = inObj.getAttribute("Id");
            if (j != null)
            {
	            Id = j.toString();
            }
        }

    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return KeyName;
        }
        if(propertyIndex==1)
        {
            return KeyValue;
        }
        if(propertyIndex==2)
        {
            return RetrievalMethod;
        }
        if(propertyIndex==3)
        {
            return X509Data;
        }
        if(propertyIndex==4)
        {
            return PGPData;
        }
        if(propertyIndex==5)
        {
            return SPKIData;
        }
        if(propertyIndex==6)
        {
            return MgmtData;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 7;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "KeyName";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==1)
        {
            info.type = KeyValueType.class;
            info.name = "KeyValue";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==2)
        {
            info.type = RetrievalMethodType.class;
            info.name = "RetrievalMethod";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==3)
        {
            info.type = X509DataType.class;
            info.name = "X509Data";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==4)
        {
            info.type = PGPDataType.class;
            info.name = "PGPData";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==5)
        {
            info.type = SPKIDataType.class;
            info.name = "SPKIData";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "MgmtData";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "Id";
            info.namespace= "";
            info.setValue(Id);
        }
    }}
