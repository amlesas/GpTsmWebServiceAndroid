package org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.elements;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.3.5
//
// Created by amlesas Development at 08-07-2014
//
//---------------------------------------------------


import java.util.Hashtable;


import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.ExtendedSoapSerializationEnvelope;

public class CardConfigurationLog extends AttributeContainer implements KvmSerializable
{
    
    public Error Error;
    
    public CRN CRN;
    
    public CollatorReturnCode CollatorReturnCode;
    
    public String ValidCardProfileID;
    
    public ArrayList< PhysicalCardIdentifier>PhysicalCardIdentifier =new ArrayList<PhysicalCardIdentifier>();
    
    public Integer MuteCardsNumber=0;
    
    public String DecollationStatus;

    public CardConfigurationLog ()
    {
    }

    public CardConfigurationLog (AttributeContainer inObj,ExtendedSoapSerializationEnvelope envelope)
    {
	    
	    if (inObj == null)
            return;



        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("Error"))
        {	
	        java.lang.Object j = soapObject.getProperty("Error");
	        this.Error = (Error)envelope.get(j,Error.class);
        }
        if (soapObject.hasProperty("CRN"))
        {	
	        java.lang.Object j = soapObject.getProperty("CRN");
	        this.CRN = (CRN)envelope.get(j,CRN.class);
        }
        if (soapObject.hasProperty("CollatorReturnCode"))
        {	
	        java.lang.Object j = soapObject.getProperty("CollatorReturnCode");
	        this.CollatorReturnCode = (CollatorReturnCode)envelope.get(j,CollatorReturnCode.class);
        }
        if (soapObject.hasProperty("ValidCardProfileID"))
        {	
	        java.lang.Object obj = soapObject.getProperty("ValidCardProfileID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.ValidCardProfileID = j.toString();
                }
	        }
	        else if (obj!= null){
                this.ValidCardProfileID = obj.toString();
            }    
        }
        if (soapObject.hasProperty("PhysicalCardIdentifier"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.PhysicalCardIdentifier = new ArrayList<PhysicalCardIdentifier>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("PhysicalCardIdentifier"))
	            {
                    java.lang.Object j =info.getValue();
	                PhysicalCardIdentifier j1= (PhysicalCardIdentifier)envelope.get(j,PhysicalCardIdentifier.class);
	                this.PhysicalCardIdentifier.add(j1);
	            }
	        }
        }
        if (soapObject.hasProperty("MuteCardsNumber"))
        {	
	        java.lang.Object obj = soapObject.getProperty("MuteCardsNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.MuteCardsNumber = Integer.parseInt(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof Integer){
                this.MuteCardsNumber = (Integer)obj;
            }    
        }


        if (inObj.hasAttribute("DecollationStatus"))
        {	
            java.lang.Object j = inObj.getAttribute("DecollationStatus");
            if (j != null)
            {
	            DecollationStatus = j.toString();
            }
        }

    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using org.mbds.wolf.tsm.gp.systems.messaging2_1_0 version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return Error;
        }
        if(propertyIndex==1)
        {
            return CRN;
        }
        if(propertyIndex==2)
        {
            return CollatorReturnCode;
        }
        if(propertyIndex==3)
        {
            return ValidCardProfileID;
        }
        if(propertyIndex==4)
        {
            return MuteCardsNumber;
        }
        if(propertyIndex>=+5 && propertyIndex< + 5+this.PhysicalCardIdentifier.size())
        {
            return PhysicalCardIdentifier.get(propertyIndex-(+5));
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 5+PhysicalCardIdentifier.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = Error.class;
            info.name = "Error";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==1)
        {
            info.type = CRN.class;
            info.name = "CRN";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==2)
        {
            info.type = CollatorReturnCode.class;
            info.name = "CollatorReturnCode";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ValidCardProfileID";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "MuteCardsNumber";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex>=+5 && propertyIndex <= +5+this.PhysicalCardIdentifier.size())
        {
            info.type = PhysicalCardIdentifier.class;
            info.name = "PhysicalCardIdentifier";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "DecollationStatus";
            info.namespace= "";
            info.setValue(DecollationStatus);
        }
    }}
