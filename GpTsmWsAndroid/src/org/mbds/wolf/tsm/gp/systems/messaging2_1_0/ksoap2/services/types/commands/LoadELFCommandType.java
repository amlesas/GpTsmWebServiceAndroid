package org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.services.types.commands;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.3.5
//
// Created by amlesas Development at 08-07-2014
//
//---------------------------------------------------


import java.util.Hashtable;


import org.ksoap2.serialization.*;
import java.math.BigInteger;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.ExtendedSoapSerializationEnvelope;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.services.types.DAPBlockType;

public class LoadELFCommandType extends SECommandType implements KvmSerializable
{
    
    public String ExecutableLoadFileAID;
    
    public String ByteCode;
    
    public Boolean ByteCodeEncrypted;
    
    public BigInteger ParametersProfileIdentifier;
    
    public ArrayList< DAPBlockType>DAPBlock =new ArrayList<DAPBlockType>();
    
    public String SSDAidForExtradition;

    public LoadELFCommandType ()
    {
    }

    public LoadELFCommandType (AttributeContainer inObj,ExtendedSoapSerializationEnvelope envelope)
    {
	    super(inObj, envelope);
	    if (inObj == null)
            return;



        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("ExecutableLoadFileAID"))
        {	
	        java.lang.Object obj = soapObject.getProperty("ExecutableLoadFileAID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.ExecutableLoadFileAID = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.ExecutableLoadFileAID = (String)obj;
            }    
        }
        if (soapObject.hasProperty("ByteCode"))
        {	
	        java.lang.Object obj = soapObject.getProperty("ByteCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.ByteCode = j.toString();
                }
	        }
	        else if (obj!= null){
                this.ByteCode = obj.toString();
            }    
        }
        if (soapObject.hasProperty("ByteCodeEncrypted"))
        {	
	        java.lang.Object obj = soapObject.getProperty("ByteCodeEncrypted");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.ByteCodeEncrypted = new Boolean(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof Boolean){
                this.ByteCodeEncrypted = (Boolean)obj;
            }    
        }
        if (soapObject.hasProperty("ParametersProfileIdentifier"))
        {	
	        java.lang.Object obj = soapObject.getProperty("ParametersProfileIdentifier");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.ParametersProfileIdentifier = new BigInteger(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof BigInteger){
                this.ParametersProfileIdentifier = (BigInteger)obj;
            }    
        }
        if (soapObject.hasProperty("DAPBlock"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.DAPBlock = new ArrayList<DAPBlockType>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("DAPBlock"))
	            {
                    java.lang.Object j =info.getValue();
	                DAPBlockType j1= (DAPBlockType)envelope.get(j,DAPBlockType.class);
	                this.DAPBlock.add(j1);
	            }
	        }
        }
        if (soapObject.hasProperty("SSDAidForExtradition"))
        {	
	        java.lang.Object obj = soapObject.getProperty("SSDAidForExtradition");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.SSDAidForExtradition = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.SSDAidForExtradition = (String)obj;
            }    
        }


    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using org.mbds.wolf.tsm.gp.systems.messaging2_1_0 version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return ExecutableLoadFileAID;
        }
        if(propertyIndex==count+1)
        {
            return ByteCode!=null?ByteCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return ByteCodeEncrypted!=null?ByteCodeEncrypted:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return ParametersProfileIdentifier!=null?ParametersProfileIdentifier.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return SSDAidForExtradition!=null?SSDAidForExtradition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+5 && propertyIndex< count+ 5+this.DAPBlock.size())
        {
            return DAPBlock.get(propertyIndex-(count+5));
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+5+DAPBlock.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ExecutableLoadFileAID";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ByteCode";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "ByteCodeEncrypted";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ParametersProfileIdentifier";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "SSDAidForExtradition";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex>=count+5 && propertyIndex <= count+5+this.DAPBlock.size())
        {
            info.type = DAPBlockType.class;
            info.name = "DAPBlock";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

}
