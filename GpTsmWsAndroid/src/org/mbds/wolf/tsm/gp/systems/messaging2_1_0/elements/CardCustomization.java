package org.mbds.wolf.tsm.gp.systems.messaging2_1_0.elements;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.3.5
//
// Created by amlesas Development at 08-07-2014
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import org.mbds.wolf.tsm.gp.systems.messaging2_1_0.ksoap2.ExtendedSoapSerializationEnvelope;

public class CardCustomization extends AttributeContainer implements KvmSerializable
{
    
    public ModuleIdentifierCode ModuleIdentifierCode;
    
    public ArrayList< GenericModule>GenericModule =new ArrayList<GenericModule>();
    
    public ModulesCommonData ModulesCommonData=new ModulesCommonData();
    
    public DeliveryModule DeliveryModule;
    
    public String BatchID;

    public CardCustomization ()
    {
    }

    public CardCustomization (AttributeContainer inObj,ExtendedSoapSerializationEnvelope envelope)
    {
	    
	    if (inObj == null)
            return;



        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("ModuleIdentifierCode"))
        {	
	        java.lang.Object j = soapObject.getProperty("ModuleIdentifierCode");
	        this.ModuleIdentifierCode = (ModuleIdentifierCode)envelope.get(j,ModuleIdentifierCode.class);
        }
        if (soapObject.hasProperty("GenericModule"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.GenericModule = new ArrayList<GenericModule>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("GenericModule"))
	            {
                    java.lang.Object j =info.getValue();
	                GenericModule j1= (GenericModule)envelope.get(j,GenericModule.class);
	                this.GenericModule.add(j1);
	            }
	        }
        }
        if (soapObject.hasProperty("ModulesCommonData"))
        {	
	        java.lang.Object j = soapObject.getProperty("ModulesCommonData");
	        this.ModulesCommonData = new ModulesCommonData((AttributeContainer)j,envelope);
        }
        if (soapObject.hasProperty("DeliveryModule"))
        {	
	        java.lang.Object j = soapObject.getProperty("DeliveryModule");
	        this.DeliveryModule = (DeliveryModule)envelope.get(j,DeliveryModule.class);
        }


        if (inObj.hasAttribute("BatchID"))
        {	
            java.lang.Object j = inObj.getAttribute("BatchID");
            if (j != null)
            {
	            BatchID = j.toString();
            }
        }

    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return ModuleIdentifierCode;
        }
        if(propertyIndex==1)
        {
            return ModulesCommonData;
        }
        if(propertyIndex==2)
        {
            return DeliveryModule;
        }
        if(propertyIndex>=+3 && propertyIndex< + 3+this.GenericModule.size())
        {
            return GenericModule.get(propertyIndex-(+3));
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3+GenericModule.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = ModuleIdentifierCode.class;
            info.name = "ModuleIdentifierCode";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "ModulesCommonData";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex==2)
        {
            info.type = DeliveryModule.class;
            info.name = "DeliveryModule";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
        if(propertyIndex>=+3 && propertyIndex <= +3+this.GenericModule.size())
        {
            info.type = GenericModule.class;
            info.name = "GenericModule";
            info.namespace= "http://namespaces.globalplatform.org/systems-messaging/2.1.0";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "BatchID";
            info.namespace= "";
            info.setValue(BatchID);
        }
    }}
